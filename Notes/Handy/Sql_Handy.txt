--- Finding SQL that has already Run and get an explain plan from the table -------

select sql_id, sql_textplan_hash_value from gv$sql where sql_text like '%fin.ar_org_id, fin.month%' and sql_text not like 'explain%'

select * from V$SQL_BIND_CAPTURE where sql_id='4fxy9rfyr8s5v'

SELECT * FROM table(DBMS_XPLAN.DISPLAY_CURSOR('26fandusdnvg3',0));

SELECT * FROM table(DBMS_XPLAN.DISPLAY_CURSOR('26fandusdnvg3',0));

---- LISTAGG EXAMPLE -----

select index_name, listagg(column_name, ',') within group (order by column_name) as columns from dba_ind_columns a where a.index_owner='TFS' and a.table_name = 'PRICES_T'
group by index_name

---- Start and end of week ----

select trunc(sysdate,'IW')-7 as BOW, trunc(sysdate,'IW')-3 as EOW from dual;

---- RANK EXAMPLE -----

select n.source_id, count(*) from mif_notifications_t n where n.prd_code = 'TRADS' and  n.entered < to_date('2021-11-19','yyyy-mm-dd') and n.entered > to_date('2021-01-01','yyyy-mm-dd')and exists (select 1 from trd_trades_t x where x.id = source_id and x.deleted = 'N' and x.trade_type like '%gottex%')group by n.source_id

select a.mnot_id, a.source_id,a.status,a.entered from 
(select n.mnot_id, n.source_id,n.status,n.entered,--max(n.entered) 
	OVER(partition by source_id) AS entered_max
	RANK() OVER(partition by source_id ORDER BY n.entered DESC) AS rank
	from mif_notifications_t n where n.prd_code = 'TRADS' and  n.source_id in ('2021010062','2021010074','2021010083','2021010004','2021010076')
	and exists (select 1 from trd_trades_t x where x.id = source_id and x.deleted = 'N' and x.trade_type like '%gottex%')) where rank=1

------ PIVOT EXAMPLE ------

select * from (
select
extract(day from start_time) as DOM
,extract(hour from start_time) as HOD
--,nvl(sum(extract(minute from end_time-start_time)*60+ trunc(extract(second from end_time-start_time))),0) as Seconds 
--,count(*)
,to_char(nvl(sum(extract(minute from end_time-start_time)*60+ trunc(extract(second from end_time-start_time))),0)) 
    || ' Secs/' 
    || count(*) 
    || ' = '
    || to_char(round(sum( extract(minute from end_time-start_time)*60 + trunc(extract(second from end_time-start_time)))/count(*),2))
    || ' Secs' as avg_secs
--, to_char(round(sum( extract(minute from end_time-start_time)*60 + trunc(extract(second from end_time-start_time)))/count(*),2)) as avg_secs
from requests_log_t a where 
method='RESEAU.STATUS.GET' and
--method in ('RESEAU.STATUS.GET','RESEAU.STATUS.GET.DATA') and
--nvl(a.start_time,a.end_time) > sysdate - 1
trunc(start_time) > sysdate-10
group by
extract(day from start_time) 
,extract(hour from start_time) 
--(extract(hour from end_time-start_time)*60*60) + (extract(minute from end_time-start_time)*60)+ trunc(extract(second from end_time-start_time))
--order by 1,2,3
)
PIVOT
(min(avg_secs) for HOD in ( 0, 1, 2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23))




